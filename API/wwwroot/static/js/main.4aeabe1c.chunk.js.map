{"version":3,"sources":["app/models/pagination.ts","app/api/agent.ts","app/models/activity.ts","app/models/profile.ts","app/stores/activityStore.ts","app/stores/profileStore.ts","app/stores/userStore.ts","app/stores/store.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/commentStore.ts","app/layout/NavBar.tsx","features/activities/dashboard/ActivityFilters.tsx","features/profiles/FollowButton.tsx","features/profiles/ProfileCard.tsx","features/activities/dashboard/ActivityListItemAttendee.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityListItemPlaceholder.tsx","features/activities/dashboard/ActivityDashboard.tsx","app/common/form/MyTextInput.tsx","features/users/LoginForm.tsx","features/errors/ValidationErrors.tsx","features/users/RegisterForm.tsx","features/home/HomePage.tsx","app/layout/loadingComponent.tsx","app/common/form/MyTextArea.tsx","app/common/form/MySelectInput.tsx","app/common/options/categoryOptions.ts","app/common/form/MyDateInput.tsx","features/activities/form/ActivityForm.tsx","features/activities/details/ActivityDetailedChat.tsx","features/activities/details/ActivityDetailedHeader.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetailedSidebar.tsx","features/activities/details/ActivityDetails.tsx","features/errors/TestError.tsx","features/errors/NotFound.tsx","features/errors/ServerError.tsx","app/common/modals/ModalContainer.tsx","features/profiles/ProfileEdit.tsx","features/profiles/ProfileAbout.tsx","features/profiles/ProfileActivities.tsx","features/profiles/ProfileFollowings.tsx","app/common/imageUpload/PhotoWidgetCropper.tsx","app/common/imageUpload/PhotoWidgetDropzone.tsx","app/common/imageUpload/PhotoUploadWidget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfileHeader.tsx","features/profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/SctollToTop.tsx","index.tsx"],"names":["PaginatedResult","data","pagination","this","PagingParams","pageNumber","pageSize","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","a","JSON","parse","error","status","toast","method","errors","hasOwnProperty","history","push","modalStateErrors","key","flat","startsWith","userStore","logout","setServerError","Promise","reject","responseBody","requests","url","get","then","body","post","put","delete","agent","Activities","list","params","details","id","create","activity","update","attend","personal","username","predicate","Account","current","login","user","register","fbLogin","accessToken","refreshToken","Profiles","uploadPhoto","file","formData","FormData","append","setMainPhoto","deletePhoto","updateProfile","profile","updateFollowing","listFollowings","Activity","init","Object","assign","ActivityFormValues","undefined","title","category","description","date","city","venue","Profile","displayName","image","ActivityStore","activityRegistry","Map","selectedActivity","editMode","loading","loadingInitial","pagingParams","set","setPagingParams","setPredicate","value","resetPredicate","forEach","loadActivities","axiosParams","result","setActivity","setPagination","setLoadingInitial","console","log","loadActivity","getActivity","runInAction","isGoing","attendees","some","isHost","hostUsername","host","find","x","Date","state","createActivity","attendee","newActivity","updateActivity","updatedActivity","deleteActivity","updateAttendance","filter","cancelActivityToggle","isCancelled","clearSelectedActivity","updateAttendeeFollowing","following","followersCount","makeAutoObservable","reaction","keys","clear","URLSearchParams","toString","toISOString","Array","from","values","sort","b","getTime","entries","activitiesByDate","reduce","activities","format","ProfileStore","loadingProfile","uploading","followings","loadingFollowings","activeTab","loadingActivities","userActivities","setActiveTab","loadProfile","photo","photos","isMain","setImage","p","setDisplayName","activityStore","followingCount","loadFollowings","loadUserActivities","sleep","delay","resolve","setTimeout","UserStore","fbAccessToken","fbLoading","refreshTokenTimeout","creds","setToken","startRefreshTokenTimer","modalStore","closeModal","window","localStorage","removeItem","getUser","name","getFacebookLoginStatus","FB","getLoginStatus","authResponse","facebookLogin","apiLogin","catch","scope","stopRefreshTokenTimer","jwtToken","atob","split","timeout","exp","now","clearTimeout","getItem","appLoaded","setAppLoaded","setItem","modal","open","openModal","content","profileStore","commentStore","comments","hubConnection","createHubConnection","activityId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","on","comment","createdAt","unshift","stopHubConnection","stop","clearComments","addComment","invoke","StoreContext","createContext","useStore","useContext","observer","Menu","inverted","fixed","Container","Item","as","NavLink","to","exact","header","src","alt","style","marginRight","Button","positive","position","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","vertical","size","width","marginTop","Header","attached","color","active","has","onChange","Reveal","animated","Content","visible","fluid","hidden","basic","e","preventDefault","handleFollow","truncate","str","length","substring","Card","Description","bio","extra","Icon","styles","borderColor","borderWidth","List","horizontal","map","Popup","hoverable","trigger","circular","bordered","ActivityListItem","Segment","Group","Label","textAlign","marginBottom","secondary","clearing","floated","groupedActivities","group","sub","ActivityListItemPlaceholder","Placeholder","minHeight","Line","Paragraph","disabled","useState","loadingNext","setLoadingNext","useEffect","Grid","Column","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","Loader","MyTextInput","props","useField","field","meta","Form","Field","touched","label","initialValues","email","password","onSubmit","setErrors","handleSubmit","isSubmitting","className","autoComplete","placeholder","type","render","ValidationErrors","Message","MessageList","err","i","MessageItem","validationSchema","yup","required","isValid","dirty","isLoggedIn","Divider","LoadingComponent","Dimmer","MyTextArea","MySelectInput","helpers","Select","clearable","options","d","setValue","onBlur","setTouched","categoryOptions","MyDateInput","selected","useHistory","useParams","nullable","enableReinitialize","uuid","handleFormSubmit","rows","placeholderText","showTimeSelect","timeCaption","dateFormat","border","resetForm","Yup","onKeyPress","shiftKey","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","whiteSpace","activityImageStyle","activityImageTextStyle","bottom","left","height","padding","zIndex","top","ribbon","verticalAlign","relaxed","divided","Extra","TestErrors","widths","baseUrl","primary","NotFound","Inline","message","Modal","onClose","setEditMode","isCurrentUser","Tab","Pane","ProfileEdit","panes","menuItem","pane","menu","onTabChange","activeIndex","handleTabChange","itemsPerRow","objectFit","Meta","PhotoWidgetCropper","imagePreview","setCropper","initialAspectRatio","aspectRatio","preview","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoWidgetDropzone","setFiles","dzStyles","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoUploadWidget","files","revokeObjectURL","overflow","getCroppedCanvas","toBlob","blob","addPhotoMode","setAddPhotoMode","target","setTarget","currentTarget","handleSetMainPhoto","handleDeletePhoto","menuPosition","Statistic","PrivateRoute","Component","component","rest","location","useLocation","finally","hideProgressBar","path","HomePage","ActivityDashboard","ActivityDetails","ActivityForm","ProfilePage","ServerError","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","scrollTo","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.4aeabe1c.chunk.js","sourcesContent":["export interface Pagination {\r\n  currentPage: number;\r\n  itemsPerPage: number;\r\n  totalItems: number;\r\n  totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T> {\r\n  data: T;\r\n  pagination: Pagination;\r\n\r\n  constructor(data: T, pagination: Pagination) {\r\n    this.data = data;\r\n    this.pagination = pagination;\r\n  }\r\n}\r\n\r\nexport class PagingParams {\r\n  pageNumber;\r\n  pageSize;\r\n\r\n  constructor(pageNumber = 1, pageSize = 2) {\r\n    this.pageNumber = pageNumber;\r\n    this.pageSize = pageSize;\r\n  }\r\n}\r\n","import axios, { AxiosError, AxiosResponse } from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { URLSearchParams } from 'url';\r\nimport { history } from '../..';\r\nimport { Activity, ActivityFormValues } from '../models/activity';\r\nimport { PaginatedResult } from '../models/pagination';\r\nimport { Photo, Profile, UserActivity } from '../models/profile';\r\nimport { User, UserFormValues } from '../models/user';\r\nimport { store } from '../stores/store';\r\n\r\nconst sleep = (delay: number) => {\r\n  return new Promise(resolve => {\r\n    setTimeout(resolve, delay);\r\n  });\r\n};\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.request.use(config => {\r\n  const token = store.commonStore.token;\r\n  if (token) config.headers.Authorization = `Bearer ${token}`;\r\n  return config;\r\n});\r\n\r\naxios.interceptors.response.use(\r\n  async response => {\r\n    if (process.env.NODE_ENV === 'development') await sleep(1000);\r\n\r\n    const pagination = response.headers['pagination'];\r\n    if (pagination) {\r\n      response.data = new PaginatedResult(\r\n        response.data,\r\n        JSON.parse(pagination)\r\n      );\r\n      return response as AxiosResponse<PaginatedResult<any>>;\r\n    }\r\n    return response;\r\n  },\r\n  (error: AxiosError) => {\r\n    const { data, status, config, headers } = error.response!;\r\n    switch (status) {\r\n      case 400:\r\n        if (typeof data === 'string') {\r\n          toast.error(data);\r\n        }\r\n\r\n        if (config.method === 'get' && data.errors.hasOwnProperty('id')) {\r\n          history.push('/not-found');\r\n        }\r\n\r\n        if (data.errors) {\r\n          const modalStateErrors = [];\r\n          for (const key in data.errors) {\r\n            if (data.errors[key]) {\r\n              modalStateErrors.push(data.errors[key]);\r\n            }\r\n          }\r\n          throw modalStateErrors.flat();\r\n        }\r\n        break;\r\n      case 401:\r\n        if (\r\n          status === 401 &&\r\n          headers['www-authenticate'].startsWith('Bearer error=\"invalid_token\"')\r\n        ) {\r\n          store.userStore.logout();\r\n          toast.error('Session expired - please login again');\r\n        }\r\n        break;\r\n      case 404:\r\n        history.push('/not-found');\r\n        break;\r\n      case 500:\r\n        store.commonStore.setServerError(data);\r\n        history.push('/server-error');\r\n        break;\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\r\n\r\nconst requests = {\r\n  get: <T>(url: string) => axios.get<T>(url).then(responseBody),\r\n  post: <T>(url: string, body: {}) =>\r\n    axios.post<T>(url, body).then(responseBody),\r\n  put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\r\n  del: <T>(url: string) => axios.delete<T>(url).then(responseBody),\r\n};\r\n\r\nconst Activities = {\r\n  list: (params: URLSearchParams) =>\r\n    axios\r\n      .get<PaginatedResult<Activity[]>>('/activities', { params })\r\n      .then(responseBody),\r\n  details: (id: string) => requests.get<Activity>(`/activities/${id}`),\r\n  create: (activity: ActivityFormValues) =>\r\n    requests.post<void>('/activities', activity),\r\n  update: (activity: ActivityFormValues) =>\r\n    requests.put<void>(`/activities/${activity.id}`, activity),\r\n  delete: (id: string) => requests.del<void>(`/activities/${id}`),\r\n  attend: (id: string) => requests.post<void>(`/activities/${id}/attend`, {}),\r\n  personal: (username: string, predicate: string) =>\r\n    requests.get<UserActivity[]>(\r\n      `/profiles/${username}/activities?username=${username}&predicate=${predicate}`\r\n    ),\r\n};\r\n\r\nconst Account = {\r\n  current: () => requests.get<User>('/account'),\r\n  login: (user: UserFormValues) => requests.post<User>('/account/login', user),\r\n  register: (user: UserFormValues) =>\r\n    requests.post<User>('/account/register', user),\r\n  fbLogin: (accessToken: string) =>\r\n    requests.post<User>(`/account/fbLogin?accessToken=${accessToken}`, {}),\r\n  refreshToken: () => requests.post<User>('/account/refreshToken', {}),\r\n};\r\n\r\nconst Profiles = {\r\n  get: (username: string) => requests.get<Profile>(`/profiles/${username}`),\r\n  uploadPhoto: (file: Blob) => {\r\n    let formData = new FormData();\r\n    formData.append('File', file);\r\n    return axios.post<Photo>('photos', formData, {\r\n      headers: { 'Content-type': 'multipart/form-data' },\r\n    });\r\n  },\r\n  setMainPhoto: (id: string) => requests.post(`/photos/${id}/setMain`, {}),\r\n  deletePhoto: (id: string) => requests.del(`/photos/${id}`),\r\n  updateProfile: (profile: Partial<Profile>) =>\r\n    requests.put('/profiles', profile),\r\n  updateFollowing: (username: string) =>\r\n    requests.post(`/follow/${username}`, {}),\r\n  listFollowings: (username: string, predicate: string) =>\r\n    requests.get<Profile[]>(`/follow/${username}?predicate=${predicate}`),\r\n};\r\n\r\nconst agent = {\r\n  Activities,\r\n  Account,\r\n  Profiles,\r\n};\r\n\r\nexport default agent;\r\n","import { Profile } from './profile';\r\n\r\nexport interface Activity {\r\n  id: string;\r\n  title: string;\r\n  date: Date | null;\r\n  description: string;\r\n  category: string;\r\n  city: string;\r\n  venue: string;\r\n  hostUsername: string;\r\n  isCancelled: boolean;\r\n  isGoing: boolean;\r\n  isHost: boolean;\r\n  host?: Profile;\r\n  attendees: Profile[];\r\n}\r\n\r\nexport class Activity implements Activity {\r\n  constructor(init?: ActivityFormValues) {\r\n    Object.assign(this, init);\r\n  }\r\n}\r\n\r\nexport class ActivityFormValues {\r\n  id?: string = undefined;\r\n  title: string = '';\r\n  category: string = '';\r\n  description: string = '';\r\n  date: Date | null = null;\r\n  city: string = '';\r\n  venue: string = '';\r\n\r\n  constructor(activity?: ActivityFormValues) {\r\n    if (activity) {\r\n      this.id = activity.id;\r\n      this.title = activity.title;\r\n      this.category = activity.category;\r\n      this.description = activity.description;\r\n      this.date = activity.date;\r\n      this.venue = activity.venue;\r\n      this.city = activity.city;\r\n    }\r\n  }\r\n}\r\n","import { User } from './user';\r\n\r\nexport interface Profile {\r\n  username: string;\r\n  displayName: string;\r\n  image?: string;\r\n  bio?: string;\r\n  photos?: Photo[];\r\n  followersCount: number;\r\n  followingCount: number;\r\n  following: boolean;\r\n}\r\n\r\nexport class Profile implements Profile {\r\n  constructor(user: User) {\r\n    this.username = user.username;\r\n    this.displayName = user.displayName;\r\n    this.image = user.image;\r\n  }\r\n}\r\n\r\nexport interface Photo {\r\n  id: string;\r\n  url: string;\r\n  isMain: boolean;\r\n}\r\n\r\nexport interface UserActivity {\r\n  id: string;\r\n  title: string;\r\n  category: string;\r\n  date: Date;\r\n}\r\n","import { makeAutoObservable, reaction, runInAction } from 'mobx';\r\nimport agent from '../api/agent';\r\nimport { Activity, ActivityFormValues } from '../models/activity';\r\nimport { format } from 'date-fns';\r\nimport { store } from './store';\r\nimport { Profile } from '../models/profile';\r\nimport { Pagination, PagingParams } from '../models/pagination';\r\n\r\nexport default class ActivityStore {\r\n  activityRegistry = new Map<String, Activity>();\r\n\r\n  selectedActivity: Activity | undefined = undefined;\r\n  editMode = false;\r\n  loading = false;\r\n  loadingInitial = false;\r\n  pagination: Pagination | null = null;\r\n  pagingParams = new PagingParams();\r\n  predicate = new Map().set('all', true);\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    reaction(\r\n      () => this.predicate.keys(),\r\n      () => {\r\n        this.pagingParams = new PagingParams();\r\n        this.activityRegistry.clear();\r\n        this.loadActivities();\r\n      }\r\n    );\r\n  }\r\n\r\n  setPagingParams = (pagingParams: PagingParams) => {\r\n    this.pagingParams = pagingParams;\r\n  };\r\n\r\n  setPredicate = (predicate: string, value: string | Date) => {\r\n    const resetPredicate = () => {\r\n      this.predicate.forEach((value, key) => {\r\n        if (key !== 'startDate') this.predicate.delete(key);\r\n      });\r\n    };\r\n\r\n    switch (predicate) {\r\n      case 'all':\r\n        resetPredicate();\r\n        this.predicate.set('all', true);\r\n        break;\r\n      case 'isGoing':\r\n        resetPredicate();\r\n        this.predicate.set('isGoing', true);\r\n        break;\r\n      case 'isHost':\r\n        resetPredicate();\r\n        this.predicate.set('isHost', true);\r\n        break;\r\n      case 'startDate':\r\n        this.predicate.delete('startDate');\r\n        this.predicate.set('startDate', value);\r\n    }\r\n  };\r\n\r\n  get axiosParams() {\r\n    const params = new URLSearchParams();\r\n    params.append('pageNumber', this.pagingParams.pageNumber.toString());\r\n    params.append('pageSize', this.pagingParams.pageSize.toString());\r\n    this.predicate.forEach((value, key) => {\r\n      if (key === 'startDate') {\r\n        params.append(key, (value as Date).toISOString());\r\n      } else {\r\n        params.append(key, value);\r\n      }\r\n    });\r\n    return params;\r\n  }\r\n\r\n  get activitiesByDate() {\r\n    return Array.from(this.activityRegistry.values()).sort(\r\n      (a, b) => a.date!.getTime() - b.date!.getTime()\r\n    );\r\n  }\r\n\r\n  get groupedActivities() {\r\n    return Object.entries(\r\n      this.activitiesByDate.reduce((activities, activity) => {\r\n        const date = format(activity.date!, 'dd MMM yyyy');\r\n        activities[date] = activities[date]\r\n          ? [...activities[date], activity]\r\n          : [activity];\r\n        return activities;\r\n      }, {} as { [key: string]: Activity[] })\r\n    );\r\n  }\r\n\r\n  loadActivities = async () => {\r\n    this.loadingInitial = true;\r\n    try {\r\n      const result = await agent.Activities.list(this.axiosParams);\r\n\r\n      result.data.forEach(activity => {\r\n        this.setActivity(activity);\r\n      });\r\n      this.setPagination(result.pagination);\r\n      this.setLoadingInitial(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      this.setLoadingInitial(false);\r\n    }\r\n  };\r\n\r\n  setPagination = (pagination: Pagination) => {\r\n    this.pagination = pagination;\r\n  };\r\n\r\n  loadActivity = async (id: string) => {\r\n    let activity = this.getActivity(id);\r\n    if (activity) {\r\n      this.selectedActivity = activity;\r\n      return activity;\r\n    } else {\r\n      this.loadingInitial = true;\r\n      try {\r\n        activity = await agent.Activities.details(id);\r\n        this.setActivity(activity);\r\n        runInAction(() => {\r\n          this.selectedActivity = activity;\r\n        });\r\n        this.setLoadingInitial(false);\r\n        return activity;\r\n      } catch (error) {\r\n        console.log(error);\r\n        this.setLoadingInitial(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  private setActivity = (activity: Activity) => {\r\n    const user = store.userStore.user;\r\n\r\n    if (user) {\r\n      activity.isGoing = activity.attendees!.some(\r\n        a => a.username === user.username\r\n      );\r\n      activity.isHost = activity.hostUsername === user.username;\r\n      activity.host = activity.attendees?.find(\r\n        x => x.username === activity.hostUsername\r\n      );\r\n    }\r\n\r\n    activity.date = new Date(activity.date!);\r\n    this.activityRegistry.set(activity.id, activity);\r\n  };\r\n\r\n  private getActivity = (id: string) => {\r\n    return this.activityRegistry.get(id);\r\n  };\r\n\r\n  setLoadingInitial = (state: boolean) => {\r\n    this.loadingInitial = state;\r\n  };\r\n\r\n  createActivity = async (activity: ActivityFormValues) => {\r\n    const user = store.userStore.user;\r\n    const attendee = new Profile(user!);\r\n\r\n    try {\r\n      await agent.Activities.create(activity);\r\n      const newActivity = new Activity(activity);\r\n      newActivity.hostUsername = user!.username;\r\n      newActivity.attendees = [attendee];\r\n      this.setActivity(newActivity);\r\n\r\n      runInAction(() => {\r\n        this.selectedActivity = newActivity;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  updateActivity = async (activity: ActivityFormValues) => {\r\n    try {\r\n      await agent.Activities.update(activity);\r\n      runInAction(() => {\r\n        if (activity.id) {\r\n          let updatedActivity = {\r\n            ...this.getActivity(activity.id),\r\n            ...activity,\r\n          };\r\n          this.activityRegistry.set(activity.id, updatedActivity as Activity);\r\n          this.selectedActivity = updatedActivity as Activity;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  deleteActivity = async (id: string) => {\r\n    this.loading = true;\r\n\r\n    try {\r\n      await agent.Activities.delete(id);\r\n      runInAction(() => {\r\n        this.activityRegistry.delete(id);\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  updateAttendance = async () => {\r\n    const user = store.userStore.user;\r\n    this.loading = true;\r\n\r\n    try {\r\n      await agent.Activities.attend(this.selectedActivity!.id);\r\n      runInAction(() => {\r\n        if (this.selectedActivity?.isGoing) {\r\n          this.selectedActivity.attendees =\r\n            this.selectedActivity.attendees?.filter(\r\n              a => a.username !== user?.username\r\n            );\r\n          this.selectedActivity.isGoing = false;\r\n        } else {\r\n          const attendee = new Profile(user!);\r\n          this.selectedActivity?.attendees?.push(attendee);\r\n          this.selectedActivity!.isGoing = true;\r\n        }\r\n        this.activityRegistry.set(\r\n          this.selectedActivity!.id,\r\n          this.selectedActivity!\r\n        );\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  cancelActivityToggle = async () => {\r\n    this.loading = true;\r\n\r\n    try {\r\n      await agent.Activities.attend(this.selectedActivity!.id);\r\n      runInAction(() => {\r\n        this.selectedActivity!.isCancelled =\r\n          !this.selectedActivity?.isCancelled;\r\n        this.activityRegistry.set(\r\n          this.selectedActivity!.id,\r\n          this.selectedActivity!\r\n        );\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  clearSelectedActivity = () => {\r\n    this.selectedActivity = undefined;\r\n  };\r\n\r\n  updateAttendeeFollowing = (username: string) => {\r\n    this.activityRegistry.forEach(activity => {\r\n      activity.attendees.forEach(attendee => {\r\n        if (attendee.username === username) {\r\n          attendee.following\r\n            ? attendee.followersCount--\r\n            : attendee.followersCount++;\r\n          attendee.following = !attendee.following;\r\n        }\r\n      });\r\n    });\r\n  };\r\n}\r\n","import { makeAutoObservable, reaction, runInAction } from 'mobx';\r\nimport agent from '../api/agent';\r\nimport { Photo, Profile, UserActivity } from '../models/profile';\r\nimport { store } from './store';\r\n\r\nexport default class ProfileStore {\r\n  profile: Profile | null = null;\r\n  loadingProfile = false;\r\n  uploading = false;\r\n  loading = false;\r\n  followings: Profile[] = [];\r\n  loadingFollowings = false;\r\n  activeTab = 0;\r\n\r\n  loadingActivities = false;\r\n  userActivities: UserActivity[] = [];\r\n\r\n  constructor() {\r\n    //this function has the role to make the atributes from ProfileStore autoObservale\r\n    makeAutoObservable(this);\r\n\r\n    reaction(\r\n      () => this.activeTab,\r\n      activeTab => {\r\n        if (activeTab === 3 || activeTab === 4) {\r\n          const predicate = activeTab === 3 ? 'followers' : 'following';\r\n          this.loadFollowings(predicate);\r\n        } else {\r\n          this.followings = [];\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  setActiveTab = (activeTab: any) => {\r\n    this.activeTab = activeTab;\r\n  };\r\n\r\n  get isCurrentUser() {\r\n    if (store.userStore.user && this.profile) {\r\n      return store.userStore.user.username === this.profile.username;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  loadProfile = async (username: string) => {\r\n    this.loadingProfile = true;\r\n\r\n    try {\r\n      const profile = await agent.Profiles.get(username);\r\n      runInAction(() => {\r\n        this.profile = profile;\r\n        this.loadingProfile = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loadingProfile = false));\r\n    }\r\n  };\r\n\r\n  uploadPhoto = async (file: Blob) => {\r\n    this.uploading = true;\r\n    try {\r\n      const response = await agent.Profiles.uploadPhoto(file);\r\n      const photo = response.data;\r\n      runInAction(() => {\r\n        if (this.profile) {\r\n          this.profile.photos?.push(photo);\r\n          if (photo.isMain && store.userStore.user) {\r\n            store.userStore.setImage(photo.url);\r\n            this.profile.image = photo.url;\r\n          }\r\n        }\r\n        this.uploading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.uploading = false));\r\n    }\r\n  };\r\n\r\n  setMainPhoto = async (photo: Photo) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.setMainPhoto(photo.id);\r\n      store.userStore.setImage(photo.url);\r\n      runInAction(() => {\r\n        if (this.profile && this.profile.photos) {\r\n          this.profile.photos.find(p => p.isMain)!.isMain = false;\r\n          this.profile.photos.find(p => p.id === photo.id)!.isMain = true;\r\n          this.profile.image = photo.url;\r\n          this.loading = false;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      runInAction(() => (this.loading = false));\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  deletePhoto = async (photo: Photo) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.deletePhoto(photo.id);\r\n      runInAction(() => {\r\n        if (this.profile) {\r\n          this.profile.photos = this.profile.photos?.filter(\r\n            p => p.id !== photo.id\r\n          );\r\n          this.loading = false;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      runInAction(() => (this.loading = false));\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  updateProfile = async (profile: Partial<Profile>) => {\r\n    console.log('update profile');\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.updateProfile(profile);\r\n      runInAction(() => {\r\n        if (\r\n          profile.displayName &&\r\n          profile.displayName !== store.userStore.user?.displayName\r\n        ) {\r\n          store.userStore.setDisplayName(profile.displayName);\r\n        }\r\n        this.profile = { ...this.profile, ...(profile as Profile) };\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  updateFollowing = async (username: string, following: boolean) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.updateFollowing(username);\r\n      store.activityStore.updateAttendeeFollowing(username);\r\n      runInAction(() => {\r\n        if (\r\n          this.profile &&\r\n          this.profile.username !== store.userStore.user?.username &&\r\n          this.profile.username === username\r\n        ) {\r\n          following\r\n            ? this.profile.followersCount++\r\n            : this.profile.followersCount--;\r\n          this.profile.following = !this.profile.following;\r\n        }\r\n        if (\r\n          this.profile &&\r\n          this.profile.username === store.userStore.user?.username\r\n        ) {\r\n          following\r\n            ? this.profile.followingCount++\r\n            : this.profile.followingCount--;\r\n        }\r\n        this.followings.forEach(profile => {\r\n          if (profile.username === username) {\r\n            profile.following\r\n              ? profile.followersCount--\r\n              : profile.followersCount++;\r\n            profile.following = !profile.following;\r\n          }\r\n        });\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  loadFollowings = async (predicate: string) => {\r\n    this.loadingFollowings = true;\r\n    try {\r\n      const followings = await agent.Profiles.listFollowings(\r\n        this.profile!.username,\r\n        predicate\r\n      );\r\n      runInAction(() => {\r\n        this.followings = followings;\r\n        this.loadingFollowings = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.loadingFollowings = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  loadUserActivities = async (predicate: string) => {\r\n    this.loadingActivities = true;\r\n    try {\r\n      const activities = await agent.Activities.personal(\r\n        this.profile!.username,\r\n        predicate\r\n      );\r\n      runInAction(() => {\r\n        this.userActivities = activities;\r\n        console.log(this.userActivities);\r\n        this.loadingActivities = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.loadingActivities = false;\r\n      });\r\n    }\r\n  };\r\n}\r\n","import { makeAutoObservable, runInAction } from 'mobx';\r\nimport { history } from '../..';\r\nimport agent from '../api/agent';\r\nimport { User, UserFormValues } from '../models/user';\r\nimport { store } from './store';\r\n\r\nconst sleep = (delay: number) => {\r\n  return new Promise(resolve => {\r\n    setTimeout(resolve, delay);\r\n  });\r\n};\r\n\r\nexport default class UserStore {\r\n  user: User | null = null;\r\n  fbAccessToken: string | null = null;\r\n  fbLoading = false;\r\n  refreshTokenTimeout: any;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  get isLoggedIn() {\r\n    return !!this.user;\r\n  }\r\n\r\n  login = async (creds: UserFormValues) => {\r\n    try {\r\n      const user = await agent.Account.login(creds);\r\n      store.commonStore.setToken(user.token);\r\n      this.startRefreshTokenTimer(user);\r\n      runInAction(() => (this.user = user));\r\n      history.push('/activities');\r\n      store.modalStore.closeModal();\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  logout = () => {\r\n    store.commonStore.setToken(null);\r\n    window.localStorage.removeItem('jwt');\r\n    this.user = null;\r\n    history.push('/');\r\n  };\r\n\r\n  getUser = async () => {\r\n    try {\r\n      const user = await agent.Account.current();\r\n      store.commonStore.setToken(user.token);\r\n      runInAction(() => (this.user = user));\r\n      this.startRefreshTokenTimer(user);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  register = async (creds: UserFormValues) => {\r\n    try {\r\n      const user = await agent.Account.register(creds);\r\n      store.commonStore.setToken(user.token);\r\n      this.startRefreshTokenTimer(user);\r\n      runInAction(() => (this.user = user));\r\n      history.push('/activities');\r\n      store.modalStore.closeModal();\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  setImage = (image: string) => {\r\n    if (this.user) this.user.image = image;\r\n  };\r\n\r\n  setDisplayName = (name: string) => {\r\n    if (this.user) this.user.displayName = name;\r\n  };\r\n\r\n  getFacebookLoginStatus = async () => {\r\n    await sleep(3000);\r\n\r\n    window.FB.getLoginStatus(response => {\r\n      if (response.status === 'connected') {\r\n        this.fbAccessToken = response.authResponse.accessToken;\r\n      }\r\n    });\r\n  };\r\n\r\n  facebookLogin = () => {\r\n    this.fbLoading = true;\r\n    const apiLogin = (accessToken: string) => {\r\n      agent.Account.fbLogin(accessToken)\r\n        .then(user => {\r\n          store.commonStore.setToken(user.token);\r\n          this.startRefreshTokenTimer(user);\r\n          runInAction(() => {\r\n            this.user = user;\r\n            this.fbLoading = false;\r\n          });\r\n          history.push('/activities');\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n          runInAction(() => (this.fbLoading = false));\r\n        });\r\n    };\r\n\r\n    if (this.fbAccessToken) {\r\n      apiLogin(this.fbAccessToken);\r\n    } else {\r\n      window.FB.login(\r\n        response => {\r\n          apiLogin(response.authResponse.accessToken);\r\n        },\r\n        { scope: 'public_profile,email' }\r\n      );\r\n    }\r\n  };\r\n\r\n  refreshToken = async () => {\r\n    this.stopRefreshTokenTimer();\r\n    try {\r\n      const user = await agent.Account.refreshToken();\r\n      runInAction(() => (this.user = user));\r\n      store.commonStore.setToken(user.token);\r\n      this.startRefreshTokenTimer(user);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  private startRefreshTokenTimer(user: User) {\r\n    const jwtToken = JSON.parse(atob(user.token.split('.')[1]));\r\n    const expires = new Date(jwtToken.exp * 1000);\r\n    const timeout = expires.getTime() - Date.now() - 60 * 1000;\r\n    this.refreshTokenTimeout = setTimeout(this.refreshToken, timeout);\r\n  }\r\n\r\n  private stopRefreshTokenTimer() {\r\n    clearTimeout(this.refreshTokenTimeout);\r\n  }\r\n}\r\n","import { createContext, useContext } from 'react';\r\nimport ActivityStore from './activityStore';\r\nimport CommentStore from './commentStore';\r\nimport CommonStore from './commonStore';\r\nimport ModalStore from './modalStore';\r\nimport ProfileStore from './profileStore';\r\nimport UserStore from './userStore';\r\n\r\ninterface Store {\r\n  activityStore: ActivityStore;\r\n  commonStore: CommonStore;\r\n  userStore: UserStore;\r\n  modalStore: ModalStore;\r\n  profileStore: ProfileStore;\r\n  commentStore: CommentStore;\r\n}\r\n\r\nexport const store: Store = {\r\n  activityStore: new ActivityStore(),\r\n  commonStore: new CommonStore(),\r\n  userStore: new UserStore(),\r\n  modalStore: new ModalStore(),\r\n  profileStore: new ProfileStore(),\r\n  commentStore: new CommentStore(),\r\n};\r\n\r\nexport const StoreContext = createContext(store);\r\n\r\nexport function useStore() {\r\n  return useContext(StoreContext);\r\n}\r\n","import { makeAutoObservable, reaction } from 'mobx';\r\nimport { ServerError } from '../models/serverError';\r\n\r\nexport default class CommonStore {\r\n  error: ServerError | null = null;\r\n  token: string | null = window.localStorage.getItem('jwt');\r\n  appLoaded = false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    reaction(\r\n      () => this.token,\r\n      token => {\r\n        if (token) {\r\n          window.localStorage.setItem('jwt', token);\r\n        } else {\r\n          window.localStorage.removeItem('jwt');\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  setServerError = (error: ServerError) => {\r\n    this.error = error;\r\n  };\r\n\r\n  setToken = (token: string | null) => {\r\n    this.token = token;\r\n  };\r\n\r\n  setAppLoaded = () => {\r\n    this.appLoaded = true;\r\n  };\r\n}\r\n","import { makeAutoObservable } from 'mobx';\r\n\r\ninterface Modal {\r\n  open: boolean;\r\n  body: JSX.Element | null;\r\n}\r\n\r\nexport default class ModalStore {\r\n  modal: Modal = {\r\n    open: false,\r\n    body: null,\r\n  };\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  openModal = (content: JSX.Element) => {\r\n    this.modal.open = true;\r\n    this.modal.body = content;\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.modal.open = false;\r\n    this.modal.body = null;\r\n  };\r\n}\r\n","import {\r\n  HubConnection,\r\n  HubConnectionBuilder,\r\n  LogLevel,\r\n} from '@microsoft/signalr';\r\nimport { makeAutoObservable, runInAction } from 'mobx';\r\nimport { ChatComment } from '../models/comment';\r\nimport { store } from './store';\r\n\r\nexport default class CommentStore {\r\n  comments: ChatComment[] = [];\r\n  hubConnection: HubConnection | null = null;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  createHubConnection = (activityId: string) => {\r\n    if (store.activityStore.selectedActivity) {\r\n      this.hubConnection = new HubConnectionBuilder()\r\n        .withUrl(process.env.REACT_APP_CHAT_URL + '?activityId=' + activityId, {\r\n          accessTokenFactory: () => store.userStore.user?.token!,\r\n        })\r\n        .withAutomaticReconnect()\r\n        .configureLogging(LogLevel.Information)\r\n        .build();\r\n\r\n      this.hubConnection\r\n        .start()\r\n        .catch(error =>\r\n          console.log('Error establishing the connection: ', error)\r\n        );\r\n\r\n      this.hubConnection.on('LoadComments', (comments: ChatComment[]) => {\r\n        //used runinaction because we update an observable\r\n        runInAction(() => {\r\n          comments.forEach(comment => {\r\n            comment.createdAt = new Date(comment.createdAt + 'Z');\r\n          });\r\n          this.comments = comments;\r\n        });\r\n      });\r\n\r\n      this.hubConnection.on('ReceiveComment', (comment: ChatComment) => {\r\n        runInAction(() => {\r\n          comment.createdAt = new Date(comment.createdAt);\r\n          this.comments.unshift(comment);\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  stopHubConnection = () => {\r\n    this.hubConnection\r\n      ?.stop()\r\n      .catch(error => console.log('Error stopping connection: ', error));\r\n  };\r\n\r\n  clearComments = () => {\r\n    this.comments = [];\r\n    this.stopHubConnection();\r\n  };\r\n\r\n  addComment = async (values: any) => {\r\n    values.activityId = store.activityStore.selectedActivity?.id;\r\n    try {\r\n      await this.hubConnection?.invoke('SendComment', values);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n}\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport { Button, Container, Dropdown, Image, Menu } from 'semantic-ui-react';\r\nimport { useStore } from '../stores/store';\r\n\r\nexport default observer(function NavBar() {\r\n  const {\r\n    userStore: { user, logout },\r\n  } = useStore();\r\n\r\n  return (\r\n    <Menu inverted fixed=\"top\">\r\n      <Container>\r\n        <Menu.Item as={NavLink} to=\"/\" exact header>\r\n          <img\r\n            src=\"/assets/logo.png\"\r\n            alt=\"logo\"\r\n            style={{ marginRight: '10px' }}\r\n          />{' '}\r\n          Reactivities\r\n        </Menu.Item>\r\n        <Menu.Item as={NavLink} to=\"/activities\" name=\"Activities\" />\r\n        <Menu.Item as={NavLink} to=\"/errors\" name=\"Errors\" />\r\n        <Menu.Item>\r\n          <Button\r\n            as={NavLink}\r\n            to=\"/createActivity\"\r\n            positive\r\n            content=\"Create Activity\"\r\n          />\r\n        </Menu.Item>\r\n        <Menu.Item position=\"right\">\r\n          <Image\r\n            src={user?.image || '/assets/user.png'}\r\n            avatar\r\n            spaced=\"right\"\r\n          />\r\n          <Dropdown pointing=\"top left\" text={user?.displayName}>\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item\r\n                as={Link}\r\n                to={`/profiles/${user?.username}`}\r\n                text=\"My Profile\"\r\n                icon=\"user\"\r\n              />\r\n              <Dropdown.Item onClick={logout} text=\"Logout\" icon=\"power\" />\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Menu.Item>\r\n      </Container>\r\n    </Menu>\r\n  );\r\n});\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport { Header, Menu } from 'semantic-ui-react';\r\nimport { useStore } from '../../../app/stores/store';\r\n\r\nexport default observer(function ActivityFilters() {\r\n  const {\r\n    activityStore: { predicate, setPredicate },\r\n  } = useStore();\r\n\r\n  return (\r\n    <>\r\n      <Menu vertical size=\"large\" style={{ width: '100%', marginTop: '27px' }}>\r\n        <Header icon=\"filter\" attached color=\"teal\" content=\"Filters\" />\r\n        <Menu.Item\r\n          content=\"All Activities\"\r\n          active={predicate.has('all')}\r\n          onClick={() => setPredicate('all', 'true')}\r\n        />\r\n        <Menu.Item\r\n          content=\"I'm going\"\r\n          active={predicate.has('isGoing')}\r\n          onClick={() => setPredicate('isGoing', 'true')}\r\n        />\r\n        <Menu.Item\r\n          content=\"I'm hosting\"\r\n          active={predicate.has('isHost')}\r\n          onClick={() => setPredicate('isHost', 'true')}\r\n        />\r\n      </Menu>\r\n      <Header />\r\n      <Calendar\r\n        onChange={(date: Date) => setPredicate('startDate', date)}\r\n        value={predicate.get('startDate') || new Date()}\r\n      />\r\n    </>\r\n  );\r\n});\r\n","import { observer } from 'mobx-react-lite';\r\nimport React, { SyntheticEvent } from 'react';\r\nimport { Button, Reveal } from 'semantic-ui-react';\r\nimport { Profile } from '../../app/models/profile';\r\nimport { useStore } from '../../app/stores/store';\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function FollowButton({ profile }: Props) {\r\n  const { profileStore, userStore } = useStore();\r\n  const { updateFollowing, loading } = profileStore;\r\n\r\n  if (userStore.user?.username === profile.username) return null;\r\n\r\n  function handleFollow(e: SyntheticEvent, username: string) {\r\n    e.preventDefault();\r\n    profile.following\r\n      ? updateFollowing(username, false)\r\n      : updateFollowing(username, true);\r\n  }\r\n\r\n  return (\r\n    <Reveal animated=\"move\">\r\n      <Reveal.Content visible style={{ width: '100%' }}>\r\n        <Button\r\n          fluid\r\n          color=\"teal\"\r\n          content={profile.following ? 'Following' : 'Not following'}\r\n        />\r\n      </Reveal.Content>\r\n      <Reveal.Content hidden style={{ width: '100%' }}>\r\n        <Button\r\n          fluid\r\n          basic\r\n          color={profile.following ? 'red' : 'green'}\r\n          content={profile.following ? 'Unfollow' : 'Follow'}\r\n          loading={loading}\r\n          onClick={e => handleFollow(e, profile.username)}\r\n        />\r\n      </Reveal.Content>\r\n    </Reveal>\r\n  );\r\n});\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Icon, Image } from 'semantic-ui-react';\r\nimport { Profile } from '../../app/models/profile';\r\nimport FollowButton from './FollowButton';\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nfunction truncate(str: string | undefined) {\r\n  if (str) {\r\n    return str.length > 40 ? str.substring(0, 37) + '...' : str;\r\n  }\r\n}\r\n\r\nexport default observer(function ProfileCard({ profile }: Props) {\r\n  return (\r\n    <Card as={Link} to={`/profiles/${profile.username}`}>\r\n      <Image src={profile.image || '/assets/user.png'} />\r\n      <Card.Content>\r\n        <Card.Header>{profile.displayName}</Card.Header>\r\n        <Card.Description>{truncate(profile.bio)}</Card.Description>\r\n      </Card.Content>\r\n      <Card.Content extra>\r\n        <Icon name=\"user\" />\r\n        {profile.followersCount}\r\n      </Card.Content>\r\n      <FollowButton profile={profile} />\r\n    </Card>\r\n  );\r\n});\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Image, List, Popup } from 'semantic-ui-react';\r\nimport { Profile } from '../../../app/models/profile';\r\nimport ProfileCard from '../../profiles/ProfileCard';\r\n\r\ninterface Props {\r\n  attendees: Profile[];\r\n}\r\n\r\nexport default observer(function ActivityListItemAttendee({\r\n  attendees,\r\n}: Props) {\r\n  const styles = {\r\n    borderColor: 'orange',\r\n    borderWidth: 2,\r\n  };\r\n\r\n  return (\r\n    <List horizontal>\r\n      {attendees.map(attendee => (\r\n        <Popup\r\n          hoverable\r\n          key={attendee.username}\r\n          trigger={\r\n            <List.Item\r\n              key={attendee.username}\r\n              as={Link}\r\n              to={`/profiles/${attendee.username}`}>\r\n              <Image\r\n                size=\"mini\"\r\n                circular\r\n                src={attendee.image || '/assets/user.png'}\r\n                bordered\r\n                style={attendee.following ? styles : null}\r\n              />\r\n            </List.Item>\r\n          }>\r\n          <Popup.Content>\r\n            <ProfileCard profile={attendee} />\r\n          </Popup.Content>\r\n        </Popup>\r\n      ))}\r\n    </List>\r\n  );\r\n});\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Icon, Item, Label, Segment } from 'semantic-ui-react';\r\nimport { Activity } from '../../../app/models/activity';\r\nimport { format } from 'date-fns';\r\nimport ActivityListItemAttendee from './ActivityListItemAttendee';\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default function ActivityListItem({ activity }: Props) {\r\n  return (\r\n    <Segment.Group>\r\n      {activity.isCancelled && (\r\n        <Label\r\n          attached=\"top\"\r\n          color=\"red\"\r\n          content=\"Cancelled\"\r\n          style={{ textAlign: 'center' }}\r\n        />\r\n      )}\r\n      <Segment>\r\n        <Item.Group>\r\n          <Item>\r\n            <Item.Image\r\n              style={{ marginBottom: 3 }}\r\n              size=\"tiny\"\r\n              circular\r\n              src={activity.host?.image || '/assets/user.png'}\r\n            />\r\n            <Item.Content>\r\n              <Item.Header as={Link} to={`/activities/${activity.id}`}>\r\n                {activity.title}\r\n              </Item.Header>\r\n              <Item.Description>\r\n                Hosted by{' '}\r\n                <Link to={`/profiles/${activity.hostUsername}`}>\r\n                  {activity.host?.displayName}\r\n                </Link>\r\n              </Item.Description>\r\n              {activity.isHost && (\r\n                <Item.Description>\r\n                  <Label basic color=\"orange\">\r\n                    You are hosting this activity\r\n                  </Label>\r\n                </Item.Description>\r\n              )}\r\n              {activity.isGoing && !activity.isHost && (\r\n                <Item.Description>\r\n                  <Label basic color=\"green\">\r\n                    You are going to this activity\r\n                  </Label>\r\n                </Item.Description>\r\n              )}\r\n            </Item.Content>\r\n          </Item>\r\n        </Item.Group>\r\n      </Segment>\r\n      <Segment>\r\n        <span>\r\n          <Icon name=\"clock\" /> {format(activity.date!, 'dd MMM yyyy h:mm aa')}\r\n          <Icon name=\"marker\" /> {activity.venue}\r\n        </span>\r\n      </Segment>\r\n      <Segment secondary>\r\n        <ActivityListItemAttendee attendees={activity.attendees!} />\r\n      </Segment>\r\n      <Segment clearing>\r\n        <span>{activity.description}</span>\r\n        <Button\r\n          as={Link}\r\n          to={`/activities/${activity.id}`}\r\n          color=\"teal\"\r\n          floated=\"right\"\r\n          content=\"View\"\r\n        />\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n}\r\n","import { observer } from 'mobx-react-lite';\r\nimport { Fragment } from 'react';\r\nimport { Header } from 'semantic-ui-react';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport ActivityListItem from './ActivityListItem';\r\n\r\nexport default observer(function ActivityList() {\r\n  const { activityStore } = useStore();\r\n  const { groupedActivities } = activityStore;\r\n\r\n  return (\r\n    <>\r\n      {groupedActivities.map(([group, activities]) => (\r\n        <Fragment key={group}>\r\n          <Header sub color=\"teal\">\r\n            {group}\r\n          </Header>\r\n\r\n          {activities.map(activity => (\r\n            <ActivityListItem activity={activity} key={activity.id} />\r\n          ))}\r\n        </Fragment>\r\n      ))}\r\n    </>\r\n  );\r\n});\r\n","import React, { Fragment } from 'react';\r\nimport { Segment, Button, Placeholder } from 'semantic-ui-react';\r\n\r\nexport default function ActivityListItemPlaceholder() {\r\n  return (\r\n    <Fragment>\r\n      <Placeholder fluid style={{ marginTop: 25 }}>\r\n        <Segment.Group>\r\n          <Segment style={{ minHeight: 110 }}>\r\n            <Placeholder>\r\n              <Placeholder.Header image>\r\n                <Placeholder.Line />\r\n                <Placeholder.Line />\r\n              </Placeholder.Header>\r\n              <Placeholder.Paragraph>\r\n                <Placeholder.Line />\r\n              </Placeholder.Paragraph>\r\n            </Placeholder>\r\n          </Segment>\r\n          <Segment>\r\n            <Placeholder>\r\n              <Placeholder.Line />\r\n              <Placeholder.Line />\r\n            </Placeholder>\r\n          </Segment>\r\n          <Segment secondary style={{ minHeight: 70 }} />\r\n          <Segment clearing>\r\n            <Button disabled color=\"blue\" floated=\"right\" content=\"View\" />\r\n          </Segment>\r\n        </Segment.Group>\r\n      </Placeholder>\r\n    </Fragment>\r\n  );\r\n}\r\n","import { observer } from 'mobx-react-lite';\r\nimport { useEffect, useState } from 'react';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport { Grid, Loader } from 'semantic-ui-react';\r\nimport { PagingParams } from '../../../app/models/pagination';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport ActivityFilters from './ActivityFilters';\r\nimport ActivityList from './ActivityList';\r\nimport ActivityListItemPlaceholder from './ActivityListItemPlaceholder';\r\n\r\nexport default observer(function ActivityDashboard() {\r\n  const { activityStore } = useStore();\r\n  const { loadActivities, activityRegistry, setPagingParams, pagination } =\r\n    activityStore;\r\n  const [loadingNext, setLoadingNext] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (activityRegistry.size <= 1) loadActivities();\r\n  }, [activityRegistry.size, loadActivities]);\r\n\r\n  function handleGetNext() {\r\n    setLoadingNext(true);\r\n    setPagingParams(new PagingParams(pagination!.currentPage + 1));\r\n    loadActivities().then(() => setLoadingNext(false));\r\n  }\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width=\"10\">\r\n        {activityStore.loadingInitial && !loadingNext ? (\r\n          <>\r\n            <ActivityListItemPlaceholder />\r\n            <ActivityListItemPlaceholder />\r\n          </>\r\n        ) : (\r\n          <InfiniteScroll\r\n            pageStart={0}\r\n            loadMore={handleGetNext}\r\n            hasMore={\r\n              !loadingNext &&\r\n              !!pagination &&\r\n              pagination.currentPage < pagination.totalPages\r\n            }\r\n            initialLoad={false}>\r\n            <ActivityList />\r\n          </InfiniteScroll>\r\n        )}\r\n      </Grid.Column>\r\n      <Grid.Column width=\"6\">\r\n        <ActivityFilters />\r\n      </Grid.Column>\r\n      <Grid.Column width={10}>\r\n        <Loader active={loadingNext} />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import { useField } from 'formik';\r\nimport React from 'react';\r\nimport { Form, Label } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  type?: string;\r\n  label?: string;\r\n}\r\n\r\nexport default function MyTextInput(props: Props) {\r\n  const [field, meta] = useField(props.name);\r\n\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <input {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","import { ErrorMessage, Form, Formik } from 'formik';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Button, Header, Label } from 'semantic-ui-react';\r\nimport MyTextInput from '../../app/common/form/MyTextInput';\r\nimport { useStore } from '../../app/stores/store';\r\n\r\nexport default observer(function LoginForm() {\r\n  const { userStore } = useStore();\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{ email: '', password: '', error: null }}\r\n      onSubmit={(values, { setErrors }) =>\r\n        userStore\r\n          .login(values)\r\n          .catch(error => setErrors({ error: 'Invalid email or password' }))\r\n      }>\r\n      {({ handleSubmit, isSubmitting, errors }) => (\r\n        <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n          <Header\r\n            as=\"h2\"\r\n            content=\"Login to Reactivities\"\r\n            color=\"teal\"\r\n            textAlign=\"center\"\r\n          />\r\n          <MyTextInput name=\"email\" placeholder=\"Email\" />\r\n          <MyTextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\r\n          <ErrorMessage\r\n            name=\"error\"\r\n            render={() => (\r\n              <Label\r\n                style={{ marginBottom: 10 }}\r\n                basic\r\n                color=\"red\"\r\n                content={errors.error}></Label>\r\n            )}\r\n          />\r\n          <Button\r\n            loading={isSubmitting}\r\n            positive\r\n            content=\"Login\"\r\n            type=\"submit\"\r\n            fluid\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import React from 'react';\r\nimport { Message, MessageItem, MessageList } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n  errors: any;\r\n}\r\n\r\nexport default function ValidationErrors({ errors }: Props) {\r\n  return (\r\n    <Message error>\r\n      {errors && (\r\n        <MessageList>\r\n          {errors.map((err: any, i: any) => (\r\n            <MessageItem key={i}>{err}</MessageItem>\r\n          ))}\r\n        </MessageList>\r\n      )}\r\n    </Message>\r\n  );\r\n}\r\n","import { ErrorMessage, Form, Formik } from 'formik';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Button, Header } from 'semantic-ui-react';\r\nimport MyTextInput from '../../app/common/form/MyTextInput';\r\nimport { useStore } from '../../app/stores/store';\r\nimport * as yup from 'yup';\r\nimport ValidationErrors from '../errors/ValidationErrors';\r\n\r\nexport default observer(function RegisterForm() {\r\n  const { userStore } = useStore();\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        displayName: '',\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n        error: null,\r\n      }}\r\n      onSubmit={(values, { setErrors }) =>\r\n        userStore.register(values).catch(error => setErrors({ error }))\r\n      }\r\n      validationSchema={yup.object({\r\n        displayName: yup.string().required(),\r\n        username: yup.string().required(),\r\n        email: yup.string().required().email(),\r\n        password: yup.string().required(),\r\n      })}>\r\n      {({ handleSubmit, isSubmitting, errors, isValid, dirty }) => (\r\n        <Form\r\n          className=\"ui form error\"\r\n          onSubmit={handleSubmit}\r\n          autoComplete=\"off\">\r\n          <Header\r\n            as=\"h2\"\r\n            content=\"Sign up to Reactivities\"\r\n            color=\"teal\"\r\n            textAlign=\"center\"\r\n          />\r\n          <MyTextInput name=\"displayName\" placeholder=\"Display Name\" />\r\n          <MyTextInput name=\"username\" placeholder=\"Username\" />\r\n          <MyTextInput name=\"email\" placeholder=\"Email\" />\r\n          <MyTextInput name=\"password\" placeholder=\"password\" type=\"password\" />\r\n          <ErrorMessage\r\n            name=\"error\"\r\n            render={() => (\r\n              <ValidationErrors errors={errors.error}></ValidationErrors>\r\n            )}\r\n          />\r\n          <Button\r\n            disabled={!isValid || !dirty || isSubmitting}\r\n            loading={isSubmitting}\r\n            positive\r\n            content=\"Register\"\r\n            type=\"submit\"\r\n            fluid\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Button,\r\n  Container,\r\n  Divider,\r\n  Header,\r\n  Image,\r\n  Segment,\r\n} from 'semantic-ui-react';\r\nimport { useStore } from '../../app/stores/store';\r\nimport LoginForm from '../users/LoginForm';\r\nimport RegisterForm from '../users/RegisterForm';\r\n\r\nexport default observer(function HomePage() {\r\n  const { userStore, modalStore } = useStore();\r\n\r\n  return (\r\n    <Segment inverted textAlign=\"center\" vertical className=\"masthead\">\r\n      <Container text>\r\n        <Header as=\"h1\" inverted>\r\n          <Image\r\n            size=\"massive\"\r\n            src=\"/assets/logo.png\"\r\n            alt=\"logo\"\r\n            style={{ marginBottom: 12 }}\r\n          />\r\n          Reactivities\r\n        </Header>\r\n        {userStore.isLoggedIn ? (\r\n          <>\r\n            <Header as=\"h2\" inverted content=\"Welcone to Reactivities\" />\r\n            <Button as={Link} to=\"/activities\" size=\"huge\" inverted>\r\n              Go to Activities!\r\n            </Button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Button\r\n              onClick={() => modalStore.openModal(<LoginForm />)}\r\n              size=\"huge\"\r\n              inverted>\r\n              Login\r\n            </Button>\r\n            <Button\r\n              onClick={() => modalStore.openModal(<RegisterForm />)}\r\n              size=\"huge\"\r\n              inverted>\r\n              Register\r\n            </Button>\r\n            <Divider horizontal inverted>\r\n              Or\r\n            </Divider>\r\n            <Button\r\n              loading={userStore.fbLoading}\r\n              size=\"huge\"\r\n              inverted\r\n              color=\"facebook\"\r\n              content=\"Login with Facebook\"\r\n              onClick={userStore.facebookLogin}\r\n            />\r\n          </>\r\n        )}\r\n      </Container>\r\n    </Segment>\r\n  );\r\n});\r\n","import React from 'react';\r\nimport { Dimmer, Loader } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n  inverted?: boolean;\r\n  content?: string;\r\n}\r\n\r\nexport default function LoadingComponent({\r\n  inverted = true,\r\n  content = 'Loading...',\r\n}: Props) {\r\n  return (\r\n    <Dimmer active={true} inverted={inverted}>\r\n      <Loader content={content} />\r\n    </Dimmer>\r\n  );\r\n}\r\n","import { useField } from 'formik';\r\nimport React from 'react';\r\nimport { Form, Label } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  rows: number;\r\n  label?: string;\r\n}\r\n\r\nexport default function MyTextArea(props: Props) {\r\n  const [field, meta] = useField(props.name);\r\n\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <textarea {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","import { useField } from 'formik';\r\nimport React from 'react';\r\nimport { Form, Label, Select } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  options: any;\r\n  label?: string;\r\n}\r\n\r\nexport default function MySelectInput(props: Props) {\r\n  const [field, meta, helpers] = useField(props.name);\r\n\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <Select\r\n        clearable\r\n        options={props.options}\r\n        value={field.value || null}\r\n        onChange={(e, d) => helpers.setValue(d.value)}\r\n        onBlur={() => helpers.setTouched(true)}\r\n        placeholder={props.placeholder}\r\n      />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","export const categoryOptions = [\r\n  { text: 'Drinks', value: 'drinks' },\r\n  { text: 'Culture', value: 'culture' },\r\n  { text: 'Film', value: 'film' },\r\n  { text: 'Food', value: 'food' },\r\n  { text: 'Music', value: 'music' },\r\n  { text: 'Travel', value: 'travel' },\r\n];\r\n","import { useField } from 'formik';\r\nimport React from 'react';\r\nimport { Form, Label } from 'semantic-ui-react';\r\nimport DatePicker, { ReactDatePickerProps } from 'react-datepicker';\r\n\r\nexport default function MyDateInput(props: Partial<ReactDatePickerProps>) {\r\n  const [field, meta, helpers] = useField(props.name!);\r\n\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <DatePicker\r\n        {...field}\r\n        {...props}\r\n        selected={(field.value && new Date(field.value)) || null}\r\n        onChange={value => helpers.setValue(value)}\r\n      />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","import { observer } from 'mobx-react-lite';\r\nimport { useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router';\r\nimport { Button, Header, Segment } from 'semantic-ui-react';\r\nimport LoadingComponent from '../../../app/layout/loadingComponent';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport { Link } from 'react-router-dom';\r\nimport { Formik, Form } from 'formik';\r\nimport * as yup from 'yup';\r\nimport MyTextInput from '../../../app/common/form/MyTextInput';\r\nimport MyTextArea from '../../../app/common/form/MyTextArea';\r\nimport MySelectInput from '../../../app/common/form/MySelectInput';\r\nimport { categoryOptions } from '../../../app/common/options/categoryOptions';\r\nimport MyDateInput from '../../../app/common/form/MyDateInput';\r\nimport { ActivityFormValues } from '../../../app/models/activity';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nexport default observer(function ActivityForm() {\r\n  const history = useHistory();\r\n  const { activityStore } = useStore();\r\n  const { createActivity, updateActivity, loadActivity, loadingInitial } =\r\n    activityStore;\r\n  const { id } = useParams<{ id: string }>();\r\n\r\n  const [activity, setActivity] = useState<ActivityFormValues>(\r\n    new ActivityFormValues()\r\n  );\r\n\r\n  const validationSchema = yup.object({\r\n    title: yup.string().required('The activity title is required'),\r\n    description: yup.string().required('The activity description is required'),\r\n    category: yup.string().required(),\r\n    date: yup.string().required('Date is required').nullable(),\r\n    venue: yup.string().required(),\r\n    city: yup.string().required(),\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (id)\r\n      loadActivity(id).then(activity =>\r\n        setActivity(new ActivityFormValues(activity))\r\n      );\r\n  }, [id, loadActivity]);\r\n\r\n  function handleFormSubmit(activity: ActivityFormValues) {\r\n    if (!activity.id) {\r\n      let newActivity = {\r\n        ...activity,\r\n        id: uuid(),\r\n      };\r\n      createActivity(newActivity).then(() => {\r\n        history.push(`/activities/${newActivity.id}`);\r\n      });\r\n    } else {\r\n      updateActivity(activity).then(() => {\r\n        history.push(`/activities/${activity.id}`);\r\n      });\r\n    }\r\n  }\r\n\r\n  if (loadingInitial) return <LoadingComponent content=\"Loading...\" />;\r\n\r\n  return (\r\n    <Segment clearing>\r\n      <Header content=\"Activity Details\" sub color=\"teal\" />\r\n      <Formik\r\n        validationSchema={validationSchema}\r\n        enableReinitialize\r\n        initialValues={activity}\r\n        onSubmit={value => handleFormSubmit(value)}>\r\n        {({ handleSubmit, isValid, isSubmitting, dirty }) => (\r\n          <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n            <MyTextInput name=\"title\" placeholder=\"Title\" />\r\n            <MyTextArea rows={3} placeholder=\"Description\" name=\"description\" />\r\n            <MySelectInput\r\n              options={categoryOptions}\r\n              placeholder=\"Category\"\r\n              name=\"category\"\r\n            />\r\n            <MyDateInput\r\n              placeholderText=\"Date\"\r\n              name=\"date\"\r\n              showTimeSelect\r\n              timeCaption=\"time\"\r\n              dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n            />\r\n            <Header content=\"Location Details\" sub color=\"teal\" />\r\n            <MyTextInput placeholder=\"City\" name=\"city\" />\r\n            <MyTextInput placeholder=\"Venue\" name=\"venue\" />\r\n            <Button\r\n              disabled={isSubmitting || !dirty || !isValid}\r\n              loading={isSubmitting}\r\n              floated=\"right\"\r\n              positive\r\n              type=\"submit\"\r\n              content=\"Submit\"\r\n            />\r\n            <Button\r\n              as={Link}\r\n              to=\"/activities\"\r\n              floated=\"right\"\r\n              type=\"button\"\r\n              content=\"Cancel\"\r\n            />\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Segment>\r\n  );\r\n});\r\n","import { Formik, Form, Field, FieldProps } from 'formik';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Segment, Header, Comment, Loader } from 'semantic-ui-react';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport * as Yup from 'yup';\r\nimport { formatDistanceToNow } from 'date-fns';\r\n\r\ninterface Props {\r\n  activityId: string;\r\n}\r\n\r\nexport default observer(function ActivityDetailedChat({ activityId }: Props) {\r\n  const { commentStore } = useStore();\r\n\r\n  useEffect(() => {\r\n    if (activityId) {\r\n      commentStore.createHubConnection(activityId);\r\n    }\r\n    return () => {\r\n      commentStore.clearComments();\r\n    };\r\n  }, [commentStore, activityId]);\r\n\r\n  return (\r\n    <>\r\n      <Segment\r\n        textAlign=\"center\"\r\n        attached=\"top\"\r\n        inverted\r\n        color=\"teal\"\r\n        style={{ border: 'none' }}>\r\n        <Header>Chat about this event</Header>\r\n      </Segment>\r\n      <Segment attached clearing>\r\n        <Formik\r\n          onSubmit={(values, { resetForm }) =>\r\n            commentStore.addComment(values).then(() => resetForm())\r\n          }\r\n          initialValues={{ body: '' }}\r\n          validationSchema={Yup.object({\r\n            body: Yup.string().required(),\r\n          })}>\r\n          {({ isSubmitting, isValid, handleSubmit }) => (\r\n            <Form className=\"ui form\">\r\n              <Field name=\"body\">\r\n                {(props: FieldProps) => (\r\n                  <div className=\"\" style={{ position: 'relative' }}>\r\n                    <Loader active={isSubmitting} />\r\n                    <textarea\r\n                      placeholder=\"Enter your comment (Enter to submit, SHIFT + enter for new line)\"\r\n                      rows={2}\r\n                      {...props.field}\r\n                      onKeyPress={e => {\r\n                        if (e.key === 'Enter' && e.shiftKey) {\r\n                          return;\r\n                        }\r\n\r\n                        if (e.key === 'Enter' && !e.shiftKey) {\r\n                          e.preventDefault();\r\n                          isValid && handleSubmit();\r\n                        }\r\n                      }}\r\n                    />\r\n                  </div>\r\n                )}\r\n              </Field>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n        <Comment.Group>\r\n          {commentStore.comments.map(comment => (\r\n            <Comment key={comment.id}>\r\n              <Comment.Avatar src={comment.image || '/assets/user.png'} />\r\n              <Comment.Content>\r\n                <Comment.Author as={Link} to={`/profiles/${comment.username}`}>\r\n                  {comment.displayName}\r\n                </Comment.Author>\r\n                <Comment.Metadata>\r\n                  <div>{formatDistanceToNow(comment.createdAt)} ago</div>\r\n                </Comment.Metadata>\r\n                <Comment.Text style={{ whiteSpace: 'pre-wrap' }}>\r\n                  {comment.body}\r\n                </Comment.Text>\r\n              </Comment.Content>\r\n            </Comment>\r\n          ))}\r\n        </Comment.Group>\r\n      </Segment>\r\n    </>\r\n  );\r\n});\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Header, Item, Segment, Image, Label } from 'semantic-ui-react';\r\nimport { Activity } from '../../../app/models/activity';\r\nimport { format } from 'date-fns';\r\nimport { useStore } from '../../../app/stores/store';\r\n\r\nconst activityImageStyle = {\r\n  filter: 'brightness(30%)',\r\n};\r\n\r\nconst activityImageTextStyle = {\r\n  position: 'absolute',\r\n  bottom: '5%',\r\n  left: '5%',\r\n  width: '100%',\r\n  height: 'auto',\r\n  color: 'white',\r\n};\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedHeader({ activity }: Props) {\r\n  const {\r\n    activityStore: { updateAttendance, loading, cancelActivityToggle },\r\n  } = useStore();\r\n\r\n  return (\r\n    <Segment.Group>\r\n      <Segment basic attached=\"top\" style={{ padding: '0' }}>\r\n        {activity.isCancelled && (\r\n          <Label\r\n            style={{ position: 'absolute', zIndex: 1000, left: -14, top: 20 }}\r\n            ribbon\r\n            color=\"red\"\r\n            content=\"Canceled\"\r\n          />\r\n        )}\r\n        <Image\r\n          src={`/assets/categoryImages/${activity.category}.jpg`}\r\n          fluid\r\n          style={activityImageStyle}\r\n        />\r\n        <Segment style={activityImageTextStyle} basic>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Content>\r\n                <Header\r\n                  size=\"huge\"\r\n                  content={activity.title}\r\n                  style={{ color: 'white' }}\r\n                />\r\n                <p>{format(activity.date!, 'dd MMM yyyy')}</p>\r\n                <p>\r\n                  Hosted by\r\n                  <strong>\r\n                    <Link to={`/profiles/${activity.host?.username}`}>\r\n                      {activity.host?.displayName}\r\n                    </Link>\r\n                  </strong>\r\n                </p>\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Segment>\r\n      </Segment>\r\n      <Segment clearing attached=\"bottom\">\r\n        {activity.isHost ? (\r\n          <>\r\n            <Button\r\n              color={activity.isCancelled ? 'green' : 'red'}\r\n              floated=\"left\"\r\n              basic\r\n              content={\r\n                activity.isCancelled\r\n                  ? 'Re-activate Activity'\r\n                  : 'Cancel Activity'\r\n              }\r\n              onClick={cancelActivityToggle}\r\n              loading={loading}\r\n            />\r\n            <Button\r\n              disabled={activity.isCancelled}\r\n              as={Link}\r\n              to={`/manage/${activity.id}`}\r\n              color=\"orange\"\r\n              floated=\"right\">\r\n              Manage Event\r\n            </Button>\r\n          </>\r\n        ) : activity.isGoing ? (\r\n          <Button loading={loading} onClick={updateAttendance}>\r\n            Cancel attendance\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            loading={loading}\r\n            onClick={updateAttendance}\r\n            color=\"teal\"\r\n            disabled={activity.isCancelled}>\r\n            Join Activity\r\n          </Button>\r\n        )}\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n});\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Segment, Grid, Icon } from 'semantic-ui-react';\r\nimport { Activity } from '../../../app/models/activity';\r\nimport { format } from 'date-fns';\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedInfo({ activity }: Props) {\r\n  return (\r\n    <Segment.Group>\r\n      <Segment attached=\"top\">\r\n        <Grid>\r\n          <Grid.Column width={1}>\r\n            <Icon size=\"large\" color=\"teal\" name=\"info\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={15}>\r\n            <p>{activity.description}</p>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Grid verticalAlign=\"middle\">\r\n          <Grid.Column width={1}>\r\n            <Icon name=\"calendar\" size=\"large\" color=\"teal\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={15}>\r\n            <span>{format(activity.date!, 'dd MMM yyyy h:mm aa')}</span>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Grid verticalAlign=\"middle\">\r\n          <Grid.Column width={1}>\r\n            <Icon name=\"marker\" size=\"large\" color=\"teal\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={11}>\r\n            <span>\r\n              {activity.venue}, {activity.city}\r\n            </span>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n});\r\n","import React from 'react';\r\nimport { Segment, List, Label, Item, Image } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Activity } from '../../../app/models/activity';\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedSidebar({\r\n  activity: { attendees, host },\r\n}: Props) {\r\n  if (!attendees) return null;\r\n\r\n  return (\r\n    <>\r\n      <Segment\r\n        textAlign=\"center\"\r\n        style={{ border: 'none' }}\r\n        attached=\"top\"\r\n        secondary\r\n        inverted\r\n        color=\"teal\">\r\n        {attendees.length} {attendees.length === 1 ? 'Person' : 'People'} going\r\n      </Segment>\r\n      <Segment attached>\r\n        <List relaxed divided>\r\n          {attendees.map(attendee => (\r\n            <Item style={{ position: 'relative' }} key={attendee.username}>\r\n              {attendee.username === host?.username && (\r\n                <Label\r\n                  style={{ position: 'absolute' }}\r\n                  color=\"orange\"\r\n                  ribbon=\"right\">\r\n                  Host\r\n                </Label>\r\n              )}\r\n              <Image size=\"tiny\" src={attendee.image || '/assets/user.png'} />\r\n              <Item.Content verticalAlign=\"middle\">\r\n                <Item.Header as=\"h3\">\r\n                  <Link to={`/profiles/${attendee.username}`}>\r\n                    {attendee.displayName}\r\n                  </Link>\r\n                </Item.Header>\r\n                {attendee.following && (\r\n                  <Item.Extra style={{ color: 'orange' }}>Following</Item.Extra>\r\n                )}\r\n              </Item.Content>\r\n            </Item>\r\n          ))}\r\n        </List>\r\n      </Segment>\r\n    </>\r\n  );\r\n});\r\n","import { observer } from 'mobx-react-lite';\r\nimport { useEffect } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport LoadingComponent from '../../../app/layout/loadingComponent';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport ActivityDetailedChat from './ActivityDetailedChat';\r\nimport ActivityDetailedHeader from './ActivityDetailedHeader';\r\nimport ActivityDetailedInfo from './ActivityDetailedInfo';\r\nimport ActivityDetailedSidebar from './ActivityDetailedSidebar';\r\n\r\nexport default observer(function ActivityDetails() {\r\n  const { activityStore } = useStore();\r\n  const {\r\n    selectedActivity: activity,\r\n    loadActivity,\r\n    loadingInitial,\r\n    clearSelectedActivity,\r\n  } = activityStore;\r\n  const { id } = useParams<{ id: string }>();\r\n\r\n  useEffect(() => {\r\n    if (id) loadActivity(id);\r\n    return () => clearSelectedActivity();\r\n  }, [id, loadActivity, clearSelectedActivity]);\r\n\r\n  if (loadingInitial || !activity) return <LoadingComponent />;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={10}>\r\n        <ActivityDetailedHeader activity={activity} />\r\n        <ActivityDetailedInfo activity={activity} />\r\n        <ActivityDetailedChat activityId={activity.id} />\r\n      </Grid.Column>\r\n      <Grid.Column width={6}>\r\n        <ActivityDetailedSidebar activity={activity} />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import React, { useState } from 'react';\r\nimport { Button, Header, Segment } from 'semantic-ui-react';\r\nimport axios from 'axios';\r\nimport ValidationErrors from './ValidationErrors';\r\n\r\nexport default function TestErrors() {\r\n  const baseUrl = process.env.REACT_APP_API_URL;\r\n  const [errors, setErrors] = useState(null);\r\n\r\n  function handleNotFound() {\r\n    axios\r\n      .get(baseUrl + 'buggy/not-found')\r\n      .catch(err => console.log(err.response));\r\n  }\r\n\r\n  function handleBadRequest() {\r\n    axios\r\n      .get(baseUrl + 'buggy/bad-request')\r\n      .catch(err => console.log(err.response));\r\n  }\r\n\r\n  function handleServerError() {\r\n    axios\r\n      .get(baseUrl + 'buggy/server-error')\r\n      .catch(err => console.log(err.response));\r\n  }\r\n\r\n  function handleUnauthorised() {\r\n    axios\r\n      .get(baseUrl + 'buggy/unauthorised')\r\n      .catch(err => console.log(err.response));\r\n  }\r\n\r\n  function handleBadGuid() {\r\n    axios\r\n      .get(baseUrl + 'activities/notaguid')\r\n      .catch(err => console.log(err.response));\r\n  }\r\n\r\n  function handleValidationError() {\r\n    axios.post(baseUrl + 'activities', {}).catch(err => setErrors(err));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header as=\"h1\" content=\"Test Error component\" />\r\n      <Segment>\r\n        <Button.Group widths=\"7\">\r\n          <Button onClick={handleNotFound} content=\"Not Found\" basic primary />\r\n          <Button\r\n            onClick={handleBadRequest}\r\n            content=\"Bad Request\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button\r\n            onClick={handleValidationError}\r\n            content=\"Validation Error\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button\r\n            onClick={handleServerError}\r\n            content=\"Server Error\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button\r\n            onClick={handleUnauthorised}\r\n            content=\"Unauthorised\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button onClick={handleBadGuid} content=\"Bad Guid\" basic primary />\r\n        </Button.Group>\r\n      </Segment>\r\n      {errors && <ValidationErrors errors={errors} />}\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Header, Icon, Segment } from 'semantic-ui-react';\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <Segment placeholder>\r\n      <Header icon>\r\n        <Icon name=\"search\" />\r\n        Oops - we've looked evetywhere and could not found this\r\n      </Header>\r\n      <Segment.Inline>\r\n        <Button as={Link} to=\"/activities\" primary>\r\n          Return to activities page\r\n        </Button>\r\n      </Segment.Inline>\r\n    </Segment>\r\n  );\r\n}\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Container, Header, Segment } from 'semantic-ui-react';\r\nimport { useStore } from '../../app/stores/store';\r\n\r\nexport default observer(function ServerError() {\r\n  const { commonStore } = useStore();\r\n  return (\r\n    <Container>\r\n      <Header as=\"h1\" content=\"Server Error\" />\r\n      <Header sub as=\"h5\" color=\"red\" content={commonStore.error?.message} />\r\n      {commonStore.error?.details && (\r\n        <Segment>\r\n          <Header as=\"h4\" content=\"Stack Trace\" color=\"teal\"></Header>\r\n          <code style={{ marginTop: '10px' }}>{commonStore.error.details}</code>\r\n        </Segment>\r\n      )}\r\n    </Container>\r\n  );\r\n});\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Modal } from 'semantic-ui-react';\r\nimport { useStore } from '../../stores/store';\r\n\r\nexport default observer(function ModalContainer() {\r\n  const { modalStore } = useStore();\r\n\r\n  return (\r\n    <Modal\r\n      open={modalStore.modal.open}\r\n      onClose={modalStore.closeModal}\r\n      size=\"mini\">\r\n      <Modal.Content>{modalStore.modal.body}</Modal.Content>\r\n    </Modal>\r\n  );\r\n});\r\n","import { Formik, Form } from 'formik';\r\nimport { useStore } from '../../app/stores/store';\r\nimport { Button } from 'semantic-ui-react';\r\nimport MyTextInput from '../../app/common/form/MyTextInput';\r\nimport MyTextArea from '../../app/common/form/MyTextArea';\r\nimport { observer } from 'mobx-react-lite';\r\nimport * as Yup from 'yup';\r\n\r\ninterface Props {\r\n  setEditMode: (editMode: boolean) => void;\r\n}\r\n\r\nexport default observer(function ProfileEditForm({ setEditMode }: Props) {\r\n  const {\r\n    profileStore: { profile, updateProfile },\r\n  } = useStore();\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{ displayName: profile?.displayName, bio: profile?.bio }}\r\n      onSubmit={values => {\r\n        updateProfile(values).then(() => setEditMode(false));\r\n      }}\r\n      validationSchema={Yup.object({ displayName: Yup.string().required() })}>\r\n      {({ isSubmitting, isValid, dirty }) => (\r\n        <Form className=\"ui form\">\r\n          <MyTextInput placeholder=\"Display name\" name=\"displayName\" />\r\n          <MyTextArea rows={3} placeholder=\"Add your bio\" name=\"bio\" />\r\n          <Button\r\n            positive\r\n            type=\"submit\"\r\n            loading={isSubmitting}\r\n            content=\"Update profile\"\r\n            floated=\"right\"\r\n            disabled={!isValid || !dirty}\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import { observer } from 'mobx-react-lite';\r\nimport { useState } from 'react';\r\nimport { Button, Grid, Header, Tab } from 'semantic-ui-react';\r\nimport { useStore } from '../../app/stores/store';\r\nimport ProfileEdit from './ProfileEdit';\r\n\r\nexport default observer(function ProfileAbout() {\r\n  const { profileStore } = useStore();\r\n  const { isCurrentUser, profile } = profileStore;\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width=\"16\">\r\n          <Header\r\n            floated=\"left\"\r\n            icon=\"user\"\r\n            content={`About ${profile?.displayName}`}\r\n          />\r\n          {isCurrentUser && (\r\n            <Button\r\n              floated=\"right\"\r\n              basic\r\n              content={editMode ? 'Cancel' : 'Edit Profile'}\r\n              onClick={() => setEditMode(!editMode)}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width=\"16\">\r\n          {editMode ? (\r\n            <ProfileEdit setEditMode={setEditMode} />\r\n          ) : (\r\n            <span style={{ whiteSpace: 'pre-wrap' }}>{profile?.bio}</span>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import { format } from 'date-fns';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, { SyntheticEvent, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Grid, Header, Image, Tab, TabProps } from 'semantic-ui-react';\r\nimport { UserActivity } from '../../app/models/profile';\r\nimport { useStore } from '../../app/stores/store';\r\n\r\nexport default observer(function ProfileActivities() {\r\n  const {\r\n    profileStore: { loadingActivities, userActivities, loadUserActivities },\r\n  } = useStore();\r\n\r\n  const panes = [\r\n    {\r\n      menuItem: 'Future activities',\r\n      pane: { key: 'future' },\r\n    },\r\n    {\r\n      menuItem: 'Past activities',\r\n      pane: { key: 'past' },\r\n    },\r\n    {\r\n      menuItem: \"Activities I'm hosting\",\r\n      pane: { key: 'hosting' },\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    loadUserActivities('future');\r\n  }, [loadUserActivities]);\r\n\r\n  const handleTabChange = (e: SyntheticEvent, data: TabProps) => {\r\n    loadUserActivities(panes[data.activeIndex as number].pane.key);\r\n  };\r\n\r\n  return (\r\n    <Tab.Pane loading={loadingActivities}>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header floated=\"left\" icon=\"calendar\" content={'Activities'} />\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          <Tab\r\n            panes={panes}\r\n            menu={{ secondary: true, pointing: true }}\r\n            onTabChange={(e, data) => handleTabChange(e, data)}\r\n          />\r\n          <br />\r\n          <Card.Group itemsPerRow={4}>\r\n            {userActivities.map((activity: UserActivity) => (\r\n              <Card\r\n                as={Link}\r\n                to={`/activities/${activity.id}`}\r\n                key={activity.id}>\r\n                <Image\r\n                  src={`/assets/categoryImages/${activity.category}.jpg`}\r\n                  style={{ minHeight: 100, objectFit: 'cover' }}\r\n                />\r\n                <Card.Content>\r\n                  <Card.Header textAlign=\"center\">{activity.title}</Card.Header>\r\n                  <Card.Meta textAlign=\"center\">\r\n                    <div>{format(new Date(activity.date), 'do LLL')}</div>\r\n                    <div>{format(new Date(activity.date), 'h:mm a')}</div>\r\n                  </Card.Meta>\r\n                </Card.Content>\r\n              </Card>\r\n            ))}\r\n          </Card.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import { observer } from 'mobx-react-lite';\r\nimport { Card, Grid, Header, Tab } from 'semantic-ui-react';\r\nimport { useStore } from '../../app/stores/store';\r\nimport ProfileCard from './ProfileCard';\r\n\r\nexport default observer(function ProfileFollowings() {\r\n  const { profileStore } = useStore();\r\n  const { profile, followings, loadingFollowings, activeTab } = profileStore;\r\n\r\n  return (\r\n    <Tab.Pane loading={loadingFollowings}>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header\r\n            floated=\"right\"\r\n            icon=\"user\"\r\n            content={\r\n              activeTab === 3\r\n                ? `People following ${profile?.displayName}`\r\n                : `People ${profile?.displayName} is following`\r\n            }\r\n          />\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          <Card.Group itemsPerRow={4}>\r\n            {followings.map(profile => (\r\n              <ProfileCard key={profile.username} profile={profile} />\r\n            ))}\r\n          </Card.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import React from 'react';\r\nimport { Cropper } from 'react-cropper';\r\nimport 'cropperjs/dist/cropper.css';\r\n\r\ninterface Props {\r\n  imagePreview: string;\r\n  setCropper: (cropper: Cropper) => void;\r\n}\r\n\r\nexport default function PhotoWidgetCropper({\r\n  imagePreview,\r\n  setCropper,\r\n}: Props) {\r\n  return (\r\n    <Cropper\r\n      src={imagePreview}\r\n      style={{ height: 200, width: '100%' }}\r\n      initialAspectRatio={1}\r\n      aspectRatio={1}\r\n      preview=\".img-preview\"\r\n      guides={false}\r\n      viewMode={1}\r\n      autoCropArea={1}\r\n      background={false}\r\n      onInitialized={cropper => setCropper(cropper)}\r\n    />\r\n  );\r\n}\r\n","import React, { useCallback } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { Header, Icon } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n  setFiles: (files: any) => void;\r\n}\r\n\r\nexport default function PhotoWidgetDropzone({ setFiles }: Props) {\r\n  const dzStyles = {\r\n    border: 'dashed 3px #eee',\r\n    borderColor: '#eee',\r\n    borderRadius: '5px',\r\n    paddingTop: '30px',\r\n    textAlign: 'center' as 'center',\r\n    height: 200,\r\n  };\r\n\r\n  const dzActive = {\r\n    borderColor: 'green',\r\n  };\r\n\r\n  const onDrop = useCallback(\r\n    acceptedFiles => {\r\n      setFiles(\r\n        acceptedFiles.map((file: any) =>\r\n          Object.assign(file, {\r\n            preview: URL.createObjectURL(file),\r\n          })\r\n        )\r\n      );\r\n    },\r\n    [setFiles]\r\n  );\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  return (\r\n    <div\r\n      {...getRootProps()}\r\n      style={isDragActive ? { ...dzStyles, ...dzActive } : dzStyles}>\r\n      <input {...getInputProps()} />\r\n      <Icon name=\"upload\" size=\"huge\" />\r\n      <Header content=\"Drop image here\" />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Button, Grid, Header } from 'semantic-ui-react';\r\nimport PhotoWidgetCropper from './PhotoWidgetCropper';\r\nimport PhotoWidgetDropzone from './PhotoWidgetDropzone';\r\n\r\ninterface Props {\r\n  loading: boolean;\r\n  uploadPhoto: (file: Blob) => void;\r\n}\r\n\r\nexport default function PhotoUploadWidget({ loading, uploadPhoto }: Props) {\r\n  const [files, setFiles] = useState<any>([]);\r\n  const [cropper, setCropper] = useState<Cropper>();\r\n\r\n  function onCrop() {\r\n    if (cropper) {\r\n      cropper.getCroppedCanvas().toBlob(blob => uploadPhoto(blob!));\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      files.forEach((file: any) => {\r\n        URL.revokeObjectURL(file.preview);\r\n      });\r\n    };\r\n  });\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={4}>\r\n        <Header sub color=\"teal\" content=\"Step 1 - Add Photo\" />\r\n        <PhotoWidgetDropzone setFiles={setFiles} />\r\n      </Grid.Column>\r\n      <Grid.Column width={1} />\r\n      <Grid.Column width={4}>\r\n        <Header sub color=\"teal\" content=\"Step 2 - Resize image\" />\r\n        {files && files.length > 0 && (\r\n          <PhotoWidgetCropper\r\n            setCropper={setCropper}\r\n            imagePreview={files[0].preview}\r\n          />\r\n        )}\r\n      </Grid.Column>\r\n      <Grid.Column width={1} />\r\n      <Grid.Column width={4}>\r\n        <Header sub color=\"teal\" content=\"Step 3 - Preview & Upload\" />\r\n        {files && files.length > 0 && (\r\n          <>\r\n            <div\r\n              className=\"img-preview\"\r\n              style={{ minHeight: 200, overflow: 'hidden' }}\r\n            />\r\n            <Button.Group widths={2}>\r\n              <Button\r\n                loading={loading}\r\n                onClick={onCrop}\r\n                positive\r\n                icon=\"check\"\r\n              />\r\n              <Button\r\n                disabled={loading}\r\n                onClick={() => setFiles([])}\r\n                icon=\"close\"\r\n              />\r\n            </Button.Group>\r\n          </>\r\n        )}\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n}\r\n","import { observer } from 'mobx-react-lite';\r\nimport React, { SyntheticEvent, useState } from 'react';\r\nimport { Button, Card, Grid, Header, Image, Tab } from 'semantic-ui-react';\r\nimport PhotoUploadWidget from '../../app/common/imageUpload/PhotoUploadWidget';\r\nimport { Photo, Profile } from '../../app/models/profile';\r\nimport { useStore } from '../../app/stores/store';\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfilePhotos({ profile }: Props) {\r\n  const {\r\n    profileStore: {\r\n      isCurrentUser,\r\n      uploadPhoto,\r\n      uploading,\r\n      loading,\r\n      setMainPhoto,\r\n      deletePhoto,\r\n    },\r\n  } = useStore();\r\n  const [addPhotoMode, setAddPhotoMode] = useState(false);\r\n  const [target, setTarget] = useState('');\r\n\r\n  function handlePhotoUpload(file: Blob) {\r\n    uploadPhoto(file).then(() => setAddPhotoMode(false));\r\n  }\r\n\r\n  function handleSetMainPhoto(\r\n    photo: Photo,\r\n    e: SyntheticEvent<HTMLButtonElement>\r\n  ) {\r\n    setTarget(e.currentTarget.name);\r\n    setMainPhoto(photo);\r\n  }\r\n\r\n  function handleDeletePhoto(\r\n    photo: Photo,\r\n    e: SyntheticEvent<HTMLButtonElement>\r\n  ) {\r\n    setTarget(e.currentTarget.name);\r\n    deletePhoto(photo);\r\n  }\r\n\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header floated=\"left\" icon=\"image\" content=\"Photos\" />\r\n          {isCurrentUser && (\r\n            <Button\r\n              floated=\"right\"\r\n              basic\r\n              content={addPhotoMode ? 'Cancel' : 'Add Photo'}\r\n              onClick={() => setAddPhotoMode(!addPhotoMode)}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          {addPhotoMode ? (\r\n            <PhotoUploadWidget\r\n              uploadPhoto={handlePhotoUpload}\r\n              loading={uploading}\r\n            />\r\n          ) : (\r\n            <Card.Group itemsPerRow={5}>\r\n              {profile.photos?.map(photo => (\r\n                <Card key={photo.id}>\r\n                  <Image src={photo.url} />\r\n                  {isCurrentUser && (\r\n                    <Button.Group fluid widths={2}>\r\n                      <Button\r\n                        basic\r\n                        color=\"green\"\r\n                        content=\"Main\"\r\n                        name={'main' + photo.id}\r\n                        disabled={photo.isMain}\r\n                        loading={target === 'main' + photo.id && loading}\r\n                        onClick={e => handleSetMainPhoto(photo, e)}\r\n                      />\r\n                      <Button\r\n                        basic\r\n                        color=\"red\"\r\n                        icon=\"trash\"\r\n                        name={photo.id}\r\n                        loading={target === photo.id && loading}\r\n                        onClick={e => handleDeletePhoto(photo, e)}\r\n                        disabled={photo.isMain}\r\n                      />\r\n                    </Button.Group>\r\n                  )}\r\n                </Card>\r\n              ))}\r\n            </Card.Group>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Tab } from 'semantic-ui-react';\r\nimport { Profile } from '../../app/models/profile';\r\nimport { useStore } from '../../app/stores/store';\r\nimport ProfileAbout from './ProfileAbout';\r\nimport ProfileActivities from './ProfileActivities';\r\nimport ProfileFollowings from './ProfileFollowings';\r\nimport ProfilePhotos from './ProfilePhotos';\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileContent({ profile }: Props) {\r\n  const { profileStore } = useStore();\r\n\r\n  const panes = [\r\n    { menuItem: 'About', render: () => <ProfileAbout /> },\r\n    { menuItem: 'Photos', render: () => <ProfilePhotos profile={profile} /> },\r\n    { menuItem: 'Events', render: () => <ProfileActivities /> },\r\n    {\r\n      menuItem: 'Followers',\r\n      render: () => <ProfileFollowings />,\r\n    },\r\n    {\r\n      menuItem: 'Following',\r\n      render: () => <ProfileFollowings />,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Tab\r\n      menu={{ fluid: true, vertical: true }}\r\n      menuPosition=\"right\"\r\n      panes={panes}\r\n      onTabChange={(e, data) => profileStore.setActiveTab(data.activeIndex)}\r\n    />\r\n  );\r\n});\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport {\r\n  Divider,\r\n  Grid,\r\n  Header,\r\n  Item,\r\n  Segment,\r\n  Statistic,\r\n} from 'semantic-ui-react';\r\nimport { Profile } from '../../app/models/profile';\r\nimport FollowButton from './FollowButton';\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileHeader({ profile }: Props) {\r\n  return (\r\n    <Segment>\r\n      <Grid>\r\n        <Grid.Column width={12}>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Image\r\n                avatar\r\n                size=\"small\"\r\n                src={profile.image || '/assets/user.png'}\r\n              />\r\n              <Item.Content verticalAlign=\"middle\">\r\n                <Header as=\"h1\" content={profile.displayName} />\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Grid.Column>\r\n        <Grid.Column width={4}>\r\n          <Item.Group>\r\n            <Statistic.Group widths={2}>\r\n              <Statistic label=\"Followers\" value={profile.followersCount} />\r\n              <Statistic label=\"Following\" value={profile.followingCount} />\r\n            </Statistic.Group>\r\n            <Divider />\r\n            <FollowButton profile={profile} />\r\n          </Item.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Segment>\r\n  );\r\n});\r\n","import { observer } from 'mobx-react-lite';\r\nimport React, { useEffect } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport LoadingComponent from '../../app/layout/loadingComponent';\r\nimport { useStore } from '../../app/stores/store';\r\nimport ProfileContent from './ProfileContent';\r\nimport ProfileHeader from './ProfileHeader';\r\n\r\n//we make the function observer so it can react to any changes in our store inside this component\r\n\r\nexport default observer(function ProfilePage() {\r\n  const { username } = useParams<{ username: string }>();\r\n  const { profileStore } = useStore();\r\n  const { loadingProfile, loadProfile, profile, setActiveTab } = profileStore;\r\n\r\n  useEffect(() => {\r\n    loadProfile(username);\r\n    return () => {\r\n      setActiveTab(0);\r\n    };\r\n  }, [loadProfile, username, setActiveTab]);\r\n\r\n  if (loadingProfile) return <LoadingComponent content=\"Loading profile...\" />;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={16}>\r\n        {profile && (\r\n          <>\r\n            <ProfileHeader profile={profile} />\r\n            <ProfileContent profile={profile} />\r\n          </>\r\n        )}\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import { Redirect, Route, RouteComponentProps, RouteProps } from 'react-router';\r\nimport { useStore } from '../stores/store';\r\n\r\ninterface Props extends RouteProps {\r\n  component:\r\n    | React.ComponentType<RouteComponentProps<any>>\r\n    | React.ComponentType<any>;\r\n}\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }: Props) {\r\n  const {\r\n    userStore: { isLoggedIn },\r\n  } = useStore();\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        isLoggedIn ? <Component {...props} /> : <Redirect to=\"/\" />\r\n      }\r\n    />\r\n  );\r\n}\r\n","import { useEffect } from 'react';\r\nimport { Container } from 'semantic-ui-react';\r\nimport NavBar from './NavBar';\r\nimport ActivityDashboard from '../../features/activities/dashboard/ActivityDashboard';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Route, Switch, useLocation } from 'react-router';\r\nimport HomePage from '../../features/home/HomePage';\r\nimport ActivityForm from '../../features/activities/form/ActivityForm';\r\nimport ActivityDetails from '../../features/activities/details/ActivityDetails';\r\nimport TestErrors from '../../features/errors/TestError';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport NotFound from '../../features/errors/NotFound';\r\nimport ServerError from '../../features/errors/ServerError';\r\nimport { useStore } from '../stores/store';\r\nimport LoadingComponent from './loadingComponent';\r\nimport ModalContainer from '../common/modals/ModalContainer';\r\nimport ProfilePage from '../../features/profiles/ProfilePage';\r\nimport PrivateRoute from './PrivateRoute';\r\n\r\nfunction App() {\r\n  const location = useLocation();\r\n  const { commonStore, userStore } = useStore();\r\n\r\n  useEffect(() => {\r\n    if (commonStore.token) {\r\n      userStore.getUser().finally(() => commonStore.setAppLoaded());\r\n    } else {\r\n      userStore.getFacebookLoginStatus().then(() => {\r\n        commonStore.setAppLoaded();\r\n      });\r\n    }\r\n  }, [commonStore, userStore]);\r\n\r\n  if (!commonStore.appLoaded)\r\n    return <LoadingComponent content=\"Loading app...\" />;\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer position=\"bottom-right\" hideProgressBar />\r\n      <ModalContainer />\r\n      <Route exact path=\"/\" component={HomePage} />\r\n      <Route\r\n        path={'/(.+)'}\r\n        render={() => (\r\n          <>\r\n            <NavBar />\r\n            <Container style={{ marginTop: '7em' }}>\r\n              <Switch>\r\n                <PrivateRoute\r\n                  exact\r\n                  path=\"/activities\"\r\n                  component={ActivityDashboard}\r\n                />\r\n                <PrivateRoute\r\n                  path=\"/activities/:id\"\r\n                  component={ActivityDetails}\r\n                />\r\n                <PrivateRoute\r\n                  key={location.key}\r\n                  path={['/createActivity', '/manage/:id']}\r\n                  component={ActivityForm}\r\n                />\r\n                <PrivateRoute\r\n                  path=\"/profiles/:username\"\r\n                  component={ProfilePage}\r\n                />\r\n                <PrivateRoute path=\"/errors\" component={TestErrors} />\r\n                <Route path=\"/server-error\" component={ServerError} />\r\n                <Route component={NotFound} />\r\n              </Switch>\r\n            </Container>\r\n          </>\r\n        )}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default observer(App);\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'react-calendar/dist/Calendar.css';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './app/layout/styles.css';\n\nimport App from './app/layout/App';\nimport reportWebVitals from './reportWebVitals';\nimport { store, StoreContext } from './app/stores/store';\nimport { Router } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport ScrollToTop from './app/layout/SctollToTop';\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <StoreContext.Provider value={store}>\n    <Router history={history}>\n      <ScrollToTop />\n      <App />;\n    </Router>\n  </StoreContext.Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}